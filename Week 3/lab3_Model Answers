******************Lab Week 3 answers *****************
-----------------------Task 1 ----------------------
DROP TABLE student CASCADE CONSTRAINTS;
DROP TABLE course CASCADE CONSTRAINTS;
DROP TABLE grade CASCADE CONSTRAINTS;

CREATE TABLE student (
student_no varchar2(6) primary key,
student_name varchar2(20) not null,
Student_address varchar2(50));

CREATE TABLE course (
course_no varchar2(3) primary key,
course_name varchar2(30) not null,
Course_details varchar2(50));

CREATE TABLE grade (
student_no varchar2(6),
course_no VARCHAR2 (3), 
grade Number(3) not null,
constraint grade_pk primary key (student_no,course_no));

ALTER TABLE grade ADD CONSTRAINT grade_student_fk FOREIGN KEY (student_no) REFERENCES student (student_no) ;
ALTER TABLE grade ADD CONSTRAINT grade_course_fk FOREIGN KEY (course_no) REFERENCES course (course_no) ;


----------------Task 2 --------------------

DROP TABLE category CASCADE CONSTRAINTS ;

DROP TABLE item_desc CASCADE CONSTRAINTS ;

DROP TABLE item_scan CASCADE CONSTRAINTS ;

DROP TABLE members_index CASCADE CONSTRAINTS ;

DROP TABLE store_information CASCADE CONSTRAINTS ;

DROP TABLE store_visit CASCADE CONSTRAINTS ;

CREATE TABLE category
  (
    category_id      VARCHAR2 (2) NOT NULL ,
    category_name    VARCHAR2 (20) ,
    category_details VARCHAR2 (100)
  ) ;
ALTER TABLE category ADD CONSTRAINT category_PK PRIMARY KEY ( category_id ) ;

CREATE TABLE item_desc
  (
    item_id         VARCHAR2 (6) NOT NULL ,
    category_id     VARCHAR2 (2) NOT NULL ,
    primary_desc    VARCHAR2 (50) ,
    secondary_desc  VARCHAR2 (50) ,
    color_desc      VARCHAR2 (10) ,
    size_desc       VARCHAR2 (10) ,
    status_code     CHAR (1) NOT NULL ,
    production_date DATE ,
    expiry_date     DATE ,
    brand_name      VARCHAR2 (20)
  ) ;
ALTER TABLE item_desc ADD CONSTRAINT item_desc_PK PRIMARY KEY ( item_id ) ;

CREATE TABLE item_scan
  (
    visit_id        VARCHAR2 (6) NOT NULL ,
    item_id         VARCHAR2 (6) NOT NULL ,
    quantity        NUMBER (2) ,
    unit_cost       NUMBER (5,3) ,
    unit_total_cost NUMBER (5,3)
  ) ;
ALTER TABLE item_scan ADD CONSTRAINT item_scan_PK PRIMARY KEY ( visit_id, item_id ) ;

CREATE TABLE members_index
  (
    membership_id VARCHAR2 (6) NOT NULL ,
    customer_name VARCHAR2 (20) ,
    address       VARCHAR2 (50) ,
    member_type   VARCHAR2 (10) NOT NULL ,
    join_date     DATE NOT NULL ,
    member_status CHAR (1) ,
    member_points NUMBER (3)
  ) ;
ALTER TABLE members_index ADD CONSTRAINT members_index_PK PRIMARY KEY ( membership_id ) ;

CREATE TABLE store_information
  (
    store_id         VARCHAR2 (3) NOT NULL ,
    store_name       VARCHAR2 (20) NOT NULL ,
    street_name      VARCHAR2 (20) ,
    city             VARCHAR2 (20) ,
    zip_code         VARCHAR2 (5) ,
    phone_nbr        VARCHAR2 (20) ,
    manager_name     VARCHAR2 (30) ,
    open_sunday_flag CHAR (1) NOT NULL
  ) ;
ALTER TABLE store_information ADD CONSTRAINT store_information_PK PRIMARY KEY ( store_id ) ;

CREATE TABLE store_visit
  (
    visit_id           VARCHAR2 (6) NOT NULL ,
    store_id           VARCHAR2 (3) NOT NULL ,
    membership_id      VARCHAR2 (6) NOT NULL ,
    transaction_date   DATE ,
    tot_unique_itm_cnt NUMBER (2) ,
    tot_visit_amt      NUMBER (5,3)
  ) ;
ALTER TABLE store_visit ADD CONSTRAINT store_visit_PK PRIMARY KEY ( visit_id ) ;

ALTER TABLE store_visit ADD CONSTRAINT TABLE_9_members_index_FK FOREIGN KEY ( membership_id ) REFERENCES members_index ( membership_id ) ;

ALTER TABLE store_visit ADD CONSTRAINT TABLE_9_store_information_FK FOREIGN KEY ( store_id ) REFERENCES store_information ( store_id ) ;

ALTER TABLE item_desc ADD CONSTRAINT item_desc_category_FK FOREIGN KEY ( category_id ) REFERENCES category ( category_id ) ;

ALTER TABLE item_scan ADD CONSTRAINT item_scan_item_desc_FK FOREIGN KEY ( item_id ) REFERENCES item_desc ( item_id ) ;

ALTER TABLE item_scan ADD CONSTRAINT item_scan_store_visit_FK FOREIGN KEY ( visit_id ) REFERENCES store_visit ( visit_id ) ;


-------- Task 3------------

Insert into COURSE (COURSE_CODE,COURSE_NAME) values ('LDD','Logical Database Design');
Insert into COURSE (COURSE_CODE,COURSE_NAME) values ('ML','Machine Learning');
Insert into COURSE (COURSE_CODE,COURSE_NAME) values ('P1','Programming 1');

Insert into STUDENT (STUDENT_NO,STUDENT_NAME) values ('S-2054','Tony Vegas');
Insert into STUDENT (STUDENT_NO,STUDENT_NAME) values ('S-7895','John Little');
Insert into STUDENT (STUDENT_NO,STUDENT_NAME) values ('S-3695','James Ship');
Insert into STUDENT (STUDENT_NO,STUDENT_NAME) values ('S-3982','Allis Ship');
Insert into STUDENT (STUDENT_NO,STUDENT_NAME) values ('S-1478','Carol Wang');

Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('LDD','S-2054',77);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('ML','S-2054',75);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('ML','S-7895',65);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('P1','S-7895',70);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('LDD','S-1478',80);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('P1','S-3982',85);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('P1','S-3695',88);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('LDD','S-3695',90);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('ML','S-1478',77);
Insert into GRADE (COURSE_CODE,STUDENT_NO,GRADE) values ('P1','S-1478',70);


SELECT student.student_no as "Student ID", student.student_name as "Student Name", course.course_code as "Course Code", course.course_name as "Course Name", grade.grade as "Grade %"
FROM student, course, grade
WHERE student.STUDENT_NO = grade.STUDENT_NO
AND course.COURSE_CODE = grade.COURSE_CODE
order by grade, student_name;


-------------- Task 4 ------------------------------

INSERT INTO countries (COUNTRY_ID, COUNTRY_NAME, region_id)
values ('NZ', 'New Zealand', 3);

INSERT INTO locations (LOCATION_ID, STREET_ADDRESS, postal_code, city, state_province, country_id)
values (3300, 'AUT City Campus, WT Building', '1010', 'Auckland', 'Auckland', 'NZ');

INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
values (280, 'Research and Development', 100, 3300);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
values (207, 'First N', 'Last N', 'name1', '555-555-555', '1/3/2016', 'IT_PROG', 5000,null, 100, 280);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES (208, 'First N', 'Last N', 'name2', '555-555-555', '1/3/2016', 'IT_PROG', 5000,NULL, 100, 280);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES (209, 'First N', 'Last N', 'name3', '555-555-555', '1/3/2016', 'IT_PROG', 5000,NULL, 100, 280);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES (210, 'First N', 'Last N', 'name4', '555-555-555', '1/3/2016', 'IT_PROG', 5000,NULL, 100, 280);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES (211, 'First N', 'Last N', 'name5', '555-555-555', '1/3/2016', 'IT_PROG', 5000,NULL, 100, 280);

